Q: What happens when you initialize a repository? Why do you need to do it?
A: Git makes a .git hidden file that tracks the state of the files in the direct in which you initialize the repository. This must be done in order to track the revision history of the contents; otherwise, it is not a Git repository.

Q: How is the staging area different from the working directory and the repository? What value do you think it offers?
A: Different from working directory in that it only indexes files ready for the next commit. Different than the repository in that it is not officially serialized, is more informal, and can be added an subtracted from without a history.

Q: How can you use the staging are to make sure you have one commit per logical changed?
A: git diff --staged will compare staged index with most current commit in branch. If there is more than one logical change staged, then git reset <file> will remove additional logical changes for future commit.

Q: What are some situations when branches would be helpful in keeping your history organized? How would branches help?
A: Allows for experimentation, allows for a way around a broken build.

Q: How so the diagrams help you visualize the branch structure?
A: I didn't make a diagram. I think the one the instructor drew was helpful though.
